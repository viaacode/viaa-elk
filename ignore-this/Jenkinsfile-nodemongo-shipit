// TODO TEST THIS
pipeline {
    agent {
      node {
        // spin up a node.js slave pod to run this build on
        label 'nodejs'
      }
    }
    options {
        // set a timeout of 10 minutes for this pipeline
        timeout(time: 10, unit: 'MINUTES')
    }
    stages {
        stage('preamble') {
            steps {
                script {
                    openshift.withCluster("production") {
                        openshift.withProject("pipeline-app") {
                            echo "Using cluster: ${openshift.cluster()}"
                            echo "Using project: ${openshift.project()}"
                        }
                    }
                }
            }
        }
        stage('deploy') {
            steps {
                script {
                    openshift.withCluster("production") {
                        openshift.withProject("pipeline-app") {
                            def rm = openshift.selector("dc", TEMPLATENAME).rollout()
                            openshift.selector("dc", TEMPLATENAME).related('pods').untilEach(2) {
                                return (it.object().status.phase == "Running")
                            }
                        }
                    }
                } // script
            } // steps
        } // stage
    } // stages
} // pipeline
